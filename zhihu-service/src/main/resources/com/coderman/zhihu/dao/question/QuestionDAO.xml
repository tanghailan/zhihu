<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.zhihu.dao.question.QuestionDAO">
  <resultMap id="BaseResultMap" type="com.coderman.zhihu.model.question.QuestionModel">
    <id column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="question_title" jdbcType="VARCHAR" property="questionTitle" />
    <result column="question_content" jdbcType="VARCHAR" property="questionContent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="is_anonymous" jdbcType="BIT" property="isAnonymous" />
    <result column="follow_count" jdbcType="INTEGER" property="followCount" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question_id, question_title, question_content, user_id, is_anonymous, follow_count, 
    view_count, like_count, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.coderman.zhihu.model.question.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zhihu_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zhihu_question
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zhihu_question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coderman.zhihu.model.question.QuestionExample">
    delete from zhihu_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coderman.zhihu.model.question.QuestionModel">
    insert into zhihu_question (question_id, question_title, question_content, 
      user_id, is_anonymous, follow_count, 
      view_count, like_count, create_time, 
      update_time)
    values (#{questionId,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, #{questionContent,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{isAnonymous,jdbcType=BIT}, #{followCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.zhihu.model.question.QuestionModel">
    insert into zhihu_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        question_id,
      </if>
      <if test="questionTitle != null">
        question_title,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isAnonymous != null">
        is_anonymous,
      </if>
      <if test="followCount != null">
        follow_count,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="isAnonymous != null">
        #{isAnonymous,jdbcType=BIT},
      </if>
      <if test="followCount != null">
        #{followCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coderman.zhihu.model.question.QuestionExample" resultType="java.lang.Long">
    select count(*) from zhihu_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zhihu_question
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.questionTitle != null">
        question_title = #{record.questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.questionContent != null">
        question_content = #{record.questionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.isAnonymous != null">
        is_anonymous = #{record.isAnonymous,jdbcType=BIT},
      </if>
      <if test="record.followCount != null">
        follow_count = #{record.followCount,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zhihu_question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      question_title = #{record.questionTitle,jdbcType=VARCHAR},
      question_content = #{record.questionContent,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      is_anonymous = #{record.isAnonymous,jdbcType=BIT},
      follow_count = #{record.followCount,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.zhihu.model.question.QuestionModel">
    update zhihu_question
    <set>
      <if test="questionTitle != null">
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="isAnonymous != null">
        is_anonymous = #{isAnonymous,jdbcType=BIT},
      </if>
      <if test="followCount != null">
        follow_count = #{followCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.zhihu.model.question.QuestionModel">
    update zhihu_question
    set question_title = #{questionTitle,jdbcType=VARCHAR},
      question_content = #{questionContent,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      is_anonymous = #{isAnonymous,jdbcType=BIT},
      follow_count = #{followCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>


  <resultMap id="pageResultMap" type="com.coderman.zhihu.vo.question.QuestionVO" extends="BaseResultMap">
    <result column="username" property="username"/>
    <result column="nickname" property="nickname"/>
    <result column="description" property="description"/>
    <result column="avatar" property="avatar"/>
    <result column="gender" property="gender"/>
  </resultMap>

  <!-- 分页查询 -->
  <select id="page" resultMap="pageResultMap">
    SELECT
      q.question_id,
      q.question_title,
      q.question_content,
      q.user_id,
      q.is_anonymous,
      q.follow_count,
      q.view_count,
      q.like_count,
      q.create_time,
      q.update_time,
      u.username,
      u.nickname,
      u.description,
      u.avatar,
      u.gender
    FROM
        zhihu_question q
    left join zhihu_user u on q.user_id = u.user_id
    order by q.create_time desc
  </select>


  <!-- 分页查询 -->
  <select id="selectFollowedPage" resultMap="pageResultMap">
    SELECT
      q.question_id,
      q.question_title,
      q.question_content,
      q.user_id,
      q.is_anonymous,
      q.follow_count,
      q.view_count,
      q.like_count,
      q.create_time,
      q.update_time,
      u.username,
      u.nickname,
      u.description,
      u.avatar,
      u.gender
    FROM
        zhihu_question q
    left join zhihu_user u on q.user_id = u.user_id
    where q.user_id = #{userId}
    order by q.create_time desc
  </select>

  <update id="updateFollowCountUp">
    update zhihu_question
    set follow_count = follow_count  + 1
    where question_id = #{questionId}
  </update>


  <update id="updateFollowCountDown">
    update zhihu_question
    set follow_count = follow_count  - 1
    where question_id = #{questionId}
    and follow_count > 0
  </update>







</mapper>